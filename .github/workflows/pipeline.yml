name: BakeAtDome

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened ]

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.8.0
      with:
        mongodb-version: '6.0'

    - name: Install dependencies backend
      working-directory: ./backend
      run: npm ci --legacy-peer-deps

    - name: Install dependencies frontend
      working-directory: ./frontend
      run: npm ci --legacy-peer-deps

    - name: Install pm2 globally
      run: npm install -g pm2

    - name: Start frontend
      working-directory: ./frontend
      run: pm2 start 'npm start' -n frontend

    - name: Start backend
      working-directory: ./backend
      run: pm2 start 'npm run server' -n backend
    
    - name: Wait 10 seconds
      run: sleep 10

    - name: Check frontend is running
      run: curl http://127.0.0.1:3000

    - name: Test frontend
      working-directory: ./frontend
      run: npm run cypress:run

      
    - name: Check backend is running
      run: curl http://127.0.0.1:5500

    - name: Test backend
      working-directory: ./backend
      run: npm run test

    - name: Add MONGO_URL in .env
      run: echo "MONGO_URL=mongodb://mongo:2017/BakeAtDome" >> /home/runner/work/BakeAtDome/BakeAtDome/backend/.env
    
      
  build:
    needs: [ test ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build docker compose 
      if: success()
      run: docker-compose build

    - name: Push docker compose to DockerHub
      if: success()
      run: docker-compose push
  
  deploy:
    needs: [ test,build ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      if: success()
      uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ secrets.AWS_REGION }}
 
    - name: Create EC2 and deploy application to EC2
      if: success()
      env: 
        KEY_PAIR_NAME: ${{ secrets.AWS_KEYPAIR_NAME }}
        SECGROUP_ID: ${{ secrets.AWS_SECGROUP_ID }}
      run: aws ec2 run-instances --image-id ami-0b0dcb5067f052a63 --count 1 --instance-type t2.micro  --key-name $KEY_PAIR_NAME --security-group-ids $SECGROUP_ID --user-data file://script/user_data.txt
 
  close:
    if: failure()
    needs: [ test,build,deploy ]
    runs-on: ubuntu-latest
    steps:
      - name: Close Pull
        uses: peter-evans/close-pull@v2
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          pull-request-number: ${{ github.event.pull_request.number }}
          comment: Auto-closing pull request
          delete-branch: false
