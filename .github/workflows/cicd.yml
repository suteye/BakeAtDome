name: BakeAtDome

on:
  push:
    branches: [ Dev-Eye ]
  pull_request:
    types: [ opened, reopened, closed, edited ]
  merge_group:
    types: [checks_requested]
    branches: [ Dev-Eye ]

jobs:
  test:
    runs-on: ubuntu-latest

    # services:
    #   selenium:
    #     image: selenium/standalone-chrome:latest
    #     ports:
    #       - 4444:4444

    steps:
    - uses: actions/checkout@v3

    - uses: Xotabu4/selenoid-github-action@v2

    - name: Set up node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.8.0
      with:
        mongodb-version: '6.0'

    - name: Install dependencies backend
      working-directory: ./backend
      run: npm ci --legacy-peer-deps

    - name: Install dependencies frontend
      working-directory: ./frontend
      run: npm ci --legacy-peer-deps

    - name: Install pm2 globally
      run: npm install -g pm2

    - name: Start frontend
      working-directory: ./frontend
      run: pm2 start 'npm start' -n frontend

    - name: Start backend
      working-directory: ./backend
      run: pm2 start 'npm run server' -n backend


    - name: check frontend is running
      run: curl http://127.0.0.1:3000

    - name: Test frontend
      working-directory: ./frontend
      run: npm run test:protractor

    - name: check backend is running
      run: curl http://127.0.0.1:5500

    - name: Test backend
      working-directory: ./backend
      run: npm run test


    # - name: Update and start webdriver
    #   working-directory: ./frontend
    #   run: |
    #     npm run webdriver:update
    #     npm run webdriver:start
  
    # - name: Update and start webdriver and run protractor tests
    #   working-directory: ./frontend
    #   run: |
    #     npm run web:update
    #     pm2 start 'npm run web:start' -n webdriver


      
  build:
    # if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [ test ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push to DockerHub
      if: success()
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/bake-at-dome-image:latest
  
  # deploy:
  #   if: ${{ always() }}
  #   needs: [ build ]
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Configure AWS credentials
  #     if: success()
  #     uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
  #       aws-region: ${{ secrets.AWS_REGION }}
 
  #   - name: Create EC2 and deploy application to EC2
  #     if: success()
  #     env: 
  #       KEY_PAIR_NAME: ${{ secrets.AWS_KEYPAIR_NAME }}
  #       SECGROUP_ID: ${{ secrets.AWS_SECGROUP_ID }}
  #     run: aws ec2 run-instances --image-id ami-04902260ca3d33422 --instance-type t2.micro  --key-name $KEY_PAIR_NAME --security-group-ids $SECGROUP_ID --user-data file://user_data.txt 
          


